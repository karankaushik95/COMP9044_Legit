#!/bin/dash

filename="`echo "$0" | rev | cut -d'/' -f1 | rev `"

if [ ! -d ".legit" ]; then
    echo "$filename: error: no .legit directory containing legit repository exists"
    exit 1
elif [ -z "$(ls -A .legit/commit)" ]; then
    echo "$filename: error: your repository does not have any commits yet"
    exit 1
elif [ $# -lt 1  ]; then
    echo "usage: "$filename" [--force] [--cached] <filenames>"
    exit 1
fi

forced=0
cached=0
commit=$(cat .legit/commit/commit_history.txt | cut -d' ' -f2 | tail -1)

arg=`echo "$1" | grep ^--`
while [ ! -z $arg ]; do

    if [ $arg = "--force" ]; then
        forced=1;       
    elif [ $arg = "--cached" ]; then
        cached=1;
    else    
        echo "usage: "$filename" [--force] [--cached] <filenames>"
        exit 1
    fi      
    shift
    arg=`echo "$1" | grep ^--`
done

if [ $# -eq 0 ]; then
    echo "usage: "$filename" [--force] [--cached] <filenames>"
    exit 1
fi
echo "$commit zis is ze commit cache $cached forced $forced"
for file in $@; do

    arg=`echo "$file" | grep ^--`
    if [ ! -z $arg ]; then
        echo "usage: "$filename" [--force] [--cached] <filenames>"
        exit 1
    fi
    
    if [ ! -f ".legit/add/"$file"" ]; then
	echo "$filename: error: '"$file"' is not in the legit repository"
	exit 1
    else 
	if [ $forced -eq 1 ]; then
		if [ $cached -eq 0 ]; then
			rm -f "$file"
		fi
		rm -f ".legit/add/"$file""
		exit 1
	fi	
		
	#redundant condition
	
	
		#Rearrange, repo check comes last
		#in repo, just do comparisons and deletions no need to check for forced, only for cached!
		if [ -z "$(diff -Nq ".legit/add/"$file"" ".legit/commit/commit_$commit/"$file"")" ]; then
	            if [ -z "$(diff -Nq ".legit/add/"$file"" "$file")" ]; then               
	                if [ $cached -eq 0 ]; then
	                    rm -f "$file";
	                fi
		    else
	
			if [ $cached -eq 0 ]; then	
				echo "$filename: error: '"$file"' in repository is different to working file"
				exit 1
			fi		
		    fi
		    rm -f ".legit/add/"$file""
	            exit 1	
		else
			if [ -z "$(diff -Nq ".legit/add/"$file"" "$file")" ]; then
				if [ $cached -eq 1 ]; then
					rm -f ".legit/add/"$file""
	           			exit 1					
				else
					echo "$filename: error: '"$file"' has changes staged in the index"
					exit 1
				fi
			else
				echo "$filename: error: '"$file"' in index is different to both working file and repository"
				exit 1		
			fi
		fi
		
    fi
done
